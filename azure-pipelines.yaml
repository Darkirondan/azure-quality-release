name: Azure Pipelines

variables:
  python.version: '3.7.6'
  #ARM_ACCESS_KEY: 'TerraformStorageKey'
stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      name: Hosted Ubuntu 1604
    steps:
    # Needed for Terraform VM deployment
      # Download a secure file to the agent machine
      - task: DownloadSecureFile@1
        name: privateSSH
        inputs:
          secureFile: 'id_rsa'
      # to use it somewhere else use $(privateSSH.secureFilePath)
      - task: InstallSSHKey@0
        inputs:
          knownHostsEntry: '140.82.112.3 ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ=='
          sshPublicKey: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDMcKE23z2k3YNy1W6QE8wj6Etp9SzQ2kazAnvyAm39CYZ59RHyKGKkDrkFSvjVELevAKaO6G1+o3cOBMmfLjnzIHhbyexonBlt1W1+3JzEMe6YWz/rL9tJ9MYIP7S19F5IH3rzvo7BkoH45HYA/yof1wgSA/hILVYlAENlooi3XILXcDJPYrRz4ZsChs89ROL8b+f2ONtCesXPR+sJGvMbU6kDSx7NYAjjEZcnZaVXAipymK++8bckbL3MnTXL/0uMHAWF59qIz43DPMnkw+Yved3kEk/+CwEkUWY+JJ+RfqtAnAtCXNjEU1XqJy0BzcVuLUJiQNkHmK/3ZlEgx9HR DaniB@MacBook-Pro-de-Daniela.local'
          sshKeySecureFile: 'id_rsa'
      - task: TerraformInstaller@0
        inputs:
          terraformVersion: 'latest'
          displayName: Install Terraform
      - task: TerraformCLI@0
        inputs:
          command: 'apply'
          environmentServiceName: 'connection for quality_projects'
          args: --auto-approve -var location="eastus" -var resource_group="quality_projects" -var application_type="quality" -var virtual_network_name="quality_virtual_network" -var address_space=["10.5.0.0/16"] -var address_prefix_test="10.5.1.0/24" -var admin="helloadmin"

    #- task: ArchiveFiles@2
    #  displayName: 'Archive FakeRestAPI'
    #  inputs:
    #    rootFolderOrFile: 'path/to/fakerestapi'
    #    includeRootFolder: false
    #    archiveType: 'zip'
    #    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip'
    #- publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip
    #  displayName: 'Upload Package'
    #  artifact: drop-fakerestapi
#- stage:
#  jobs:
#  - deployment: FakeRestAPI
#    pool:
#      vmImage: 'Ubuntu-16.04'
#    environment: 'TEST'
#    strategy:
#      runOnce:
#        deploy:
#          steps:
#          - task: AzureWebApp@1
#            displayName: 'Deploy Azure Web App'
#            inputs:
#              azureSubscription: ''
#              appName: ''
#              appType: webApp
#              package: $(Pipeline.Workspace)/drop-fakerestapi/$(Build.BuildId)-fakerestapi.zip
  # - deployment: VMDeploy
  #   displayName: NAME
  #   environment:
  #     name:  ENVIRONMENT NAME
  #     resourceType: VirtualMachine
  #     tags: TAG NAME
  #   strategy:
  #     runOnce:
  #       deploy:
  #         steps:
  #         - task: Bash@3
  #           inputs:
  #             targetType: 'inline'
  #             script: |
  #               #! /bin/bash
                
  #               sudo apt-get upgrade -y
  #               sudo apt-get install python3-pip -y
  #               sudo apt-get install unzip -y
  #               sudo apt-get install -y chromium-browser
  #               pip3 install selenium
  #               export PATH=$PATH:some/path


